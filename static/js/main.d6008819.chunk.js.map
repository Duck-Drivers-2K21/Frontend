{"version":3,"sources":["res/img/duck_driver.png","res/quack.mp3","Feed.js","res/img/UoB_campus.jpg","res/img/team/alex.jpeg","res/img/team/luke.jpeg","res/img/team/joe.jpeg","res/img/team/sergios.jpeg","about.js","App.js","reportWebVitals.js","index.js"],"names":["Feed","useState","socket","setSocket","sid","setSid","queue","setQueue","useSound","quackSound","playQuack","useEffect","newSocket","socketIOClient","on","id","data","console","log","handleMouseAction","direction","emit","className","src","title","frameBorder","scrolling","height","width","QueueStatus","onMouseDown","onMouseUp","onClick","props","indexOf","About","href","logo","alt","allow","allowFullScreen","campus","img_alex","class","img_joe","img_luke","img_sergios","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6008819.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/duck_driver.e4e1f771.png\";","export default __webpack_public_path__ + \"static/media/quack.b86c3823.mp3\";","import './Feed.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport useSound from 'use-sound';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport quackSound from './res/quack.mp3'\r\n\r\nconst ENDPOINT = \"http://duckdriver.co.uk:5000\";\r\n\r\nexport function Feed() {\r\n    const [socket, setSocket] = useState();\r\n    const [sid, setSid] = useState(false)\r\n    const [queue, setQueue] = useState([])\r\n\r\n    const [playQuack] = useSound(quackSound);\r\n\r\n    useEffect(() => {\r\n        const newSocket = socketIOClient(ENDPOINT);\r\n        newSocket.on('connect', () => {\r\n                setSid(newSocket.id)\r\n            }\r\n        )\r\n        newSocket.on('move', (data) => console.log(data))\r\n        newSocket.on('quack', playQuack)\r\n        newSocket.on('queue', (data) => {\r\n            setQueue(data.queue)\r\n        })\r\n        setSocket(newSocket)\r\n    }, [playQuack]);\r\n\r\n\r\n    const handleMouseAction = (direction) => {\r\n        socket.emit('move', {data: direction})\r\n    }\r\n\r\n    const handleQuack = () => {\r\n        socket.emit('quack', {data: \"quack\"})\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"twitch-container\">\r\n                <div className=\"stream-container\">\r\n                    <iframe className=\"stream\"\r\n                            src=\"https://player.twitch.tv/?channel=duckdriverbath&parent=duckdriver.co.uk\"\r\n                            title=\"Stream\" frameBorder=\"0\" scrolling=\"no\" height=\"100%\" width=\"100%\"/>\r\n                </div>\r\n                <div className=\"chat-container\">\r\n                    <iframe src=\"https://www.twitch.tv/embed/duckdriverbath/chat?parent=duckdriver.co.uk\" title=\"chat\"\r\n                            height=\"100%\" width=\"100%\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <div id=\"queueStatusContainer\"><QueueStatus queue={queue} sid={sid}/></div>\r\n                <div className=\"joypad-container\">\r\n                    <div className=\"button\">\r\n                        <a onMouseDown={() => handleMouseAction(\"F\")} onMouseUp={() => handleMouseAction(\"F_OFF\")}>⬆</a>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"button\">\r\n                            <a onMouseDown={() => handleMouseAction(\"L\")}\r\n                               onMouseUp={() => handleMouseAction(\"L_OFF\")}>⬅</a>\r\n                        </div>\r\n                        <div className=\"button\">\r\n                            <a onMouseDown={() => handleMouseAction(\"B\")}\r\n                               onMouseUp={() => handleMouseAction(\"B_OFF\")}>⬇</a>\r\n                        </div>\r\n                        <div className=\"button\">\r\n                            <a onMouseDown={() => handleMouseAction(\"R\")}\r\n                               onMouseUp={() => handleMouseAction(\"R_OFF\")}>⮕️️</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"button\" id=\"quack\">\r\n                    <a onClick={() => handleQuack()}><span id=\"quackText\">Quack!</span></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nfunction QueueStatus(props) {\r\n    if (props.queue[0] === props.sid) {\r\n        return (<p id=\"queueStatus\">&#62; YOUR GO</p>);\r\n    } else if (props.queue.indexOf(props.sid) === -1) {\r\n        return (<p id=\"queueStatus\">&#62; END OF YOUR GO</p>);\r\n    } else if (props.queue.indexOf(props.sid) === 1) {\r\n        return (\r\n            <p id=\"queueStatus\">&#62; PLEASE WAIT, THERE IS {props.queue.indexOf(props.sid)} PERSON AHEAD OF YOU</p>);\r\n    } else {\r\n        return (\r\n            <p id=\"queueStatus\">&#62; PLEASE WAIT, THERE ARE {props.queue.indexOf(props.sid)} PEOPLE AHEAD OF YOU</p>);\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/UoB_campus.6cd9cd02.jpg\";","export default __webpack_public_path__ + \"static/media/alex.f5b5feec.jpeg\";","export default __webpack_public_path__ + \"static/media/luke.b69980f1.jpeg\";","export default __webpack_public_path__ + \"static/media/joe.5a1b65c9.jpeg\";","export default __webpack_public_path__ + \"static/media/sergios.7121528e.jpeg\";","import './about.css';\r\nimport logo from \"./res/img/duck_driver.png\";\r\nimport campus from \"./res/img/UoB_campus.jpg\"\r\n\r\nimport img_alex from \"./res/img/team/alex.jpeg\"\r\nimport img_luke from \"./res/img/team/luke.jpeg\"\r\nimport img_joe from \"./res/img/team/joe.jpeg\"\r\nimport img_sergios from \"./res/img/team/sergios.jpeg\"\r\n\r\nexport function About() {\r\n    let gh_alex = \"https://github.com/ouked\";\r\n    let gh_joe = \"https://github.com/joedownard\";\r\n    let gh_luke = \"https://github.com/lc2232\";\r\n    let gh_sergios = \"https://github.com/sg2295\";\r\n\r\n    return (\r\n        <div id=\"info\">\r\n            <div id=\"back\">\r\n                <div className=\"button\" >\r\n                    <a href=\"/\">⬅</a>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                home\r\n            </div>\r\n\r\n           <a href=\"/\"><img src={logo} className=\"homepage-logo\" alt=\"logo\"/></a><br/>\r\n\r\n            <h1>About</h1>\r\n\r\n\r\n\r\n            <br/>\r\n            <h2>What is this?</h2>\r\n            <p>\r\n                <b>Duck Driver</b> is a remote-controlled duck that anybody can control from their browser. Users can\r\n                join a queue and enjoy the views of the <b>University of Bath Campus</b> while adhering to government\r\n                restrictions regarding COVID-19.\r\n                todo: add image of the W A G O N\r\n            </p>\r\n            <h3>Demo</h3>\r\n            <p>\r\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/KTW3xjT6-zQ\"\r\n    title=\"YouTube video player\" frameBorder=\"0\"\r\n    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n    allowFullScreen/>\r\n            </p>\r\n\r\n            <h2>How does it work?</h2>\r\n            <p>\r\n                The hardware is a <b>Revell Control</b> RC truck with a raspberry pi connected to the controller, running\r\n                Python code to control the steering. This raspberry pi is then controlled remotely by a Python server,\r\n                which also serves this lovely React frontend and also allows for users to take control of the duck, and\r\n                become <i>duck drivers</i>.\r\n                <br/><br/>\r\n                Resources for doing this were notoriously scarce, especially as we didn't have a motor driver (and couldn't\r\n                find a datasheet for the chip found inside the truck). After frying a raspberry pi and breaking another car\r\n                down to bits, we ended up simulating button presses on the controller with the GPIO pins on the raspberry\r\n                pi. With better planning, we could have avoided a lot of headaches, but let's be honest, none of us knew\r\n                what we were doing and we didn't have the ideal tools.\r\n                <br/><br/>\r\n                To be more specific, the hardware at our disposal consisted of a couple of RC trucks (only one of which\r\n                survived), two raspberry pi boards (one got accidentally fried), Joe's webcam, a spatula to mount the\r\n                webcam on and a duck plushie.\r\n\r\n            </p>\r\n\r\n            <h2>Why did you make it?</h2>\r\n            <p>\r\n                This was our contribution to the <i>2021 Bath Hack</i> Hackathon. We wanted to create a tribute to celebrate\r\n                our campus, which we've missed over during the national lockdowns, and couldn't think of a better way of\r\n                exploring it than from the perspective of the iconic Bath ducks.\r\n                <img src={campus} id=\"campus\" alt={\"Bath campus\"}/><br/>\r\n                We believe that students currently staying abroad, attending university remotely, would appreciate the\r\n                opportunity to <i>waddle</i> down the parade, enjoy a view of the lake, and even interact with the other\r\n                ducks. Additionally, our project could be used in virtual open days, giving applicants a chance to\r\n                wander around campus on their own, so they can get a better understanding of what it's like to study at\r\n                the University of Bath.\r\n            </p>\r\n\r\n            <h2>Who are you?</h2>\r\n            <div id=\"headshots\">\r\n                <a href={gh_alex}><img src={img_alex}  alt={\"Team member Alex\"} class=\"headshot\"/></a>\r\n                <a href={gh_joe}><img src={img_joe} alt={\"Team member Joe\"} class=\"headshot\"/></a>\r\n                <a href={gh_luke}><img src={img_luke} alt={\"Team member Luke\"} class=\"headshot\"/></a>\r\n                <a href={gh_sergios}><img src={img_sergios} alt={\"Team member Sergios\"} class=\"headshot\"/></a>\r\n            </div>\r\n            <p>\r\n                We're Alex, Joe, Luke and Sergios. We're in our second-year of studying Computer Science at the\r\n                University of Bath. We all worked on all parts on this project.\r\n            </p>\r\n\r\n            <h2>Credits</h2>\r\n            <p>\r\n                Logo Design by <b>Romane Darniche</b><br/><br/>\r\n                Photograph of University of Bath campus\r\n                by <b><a href=\"https://www.bathchronicle.co.uk/news/bath-news/new-university-bath-campus-masterplan-1277112\">Bath Chronicle</a></b>\r\n            </p>\r\n            <br/>\r\n        </div>\r\n    );\r\n\r\n}\r\n","import logo from './res/img/duck_driver.png';\r\nimport './App.css';\r\nimport {Feed} from './Feed'\r\nimport {About} from './about'\r\n\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    let githubLink = \"https://github.com/Duck-Drivers-2k21\";\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route path=\"/feed\">\r\n                        <Feed/>\r\n                    </Route>\r\n                    <Route path=\"/about\">\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <div className=\"homepage-container\">\r\n                            <img src={logo} className=\"homepage-logo\" alt=\"logo\"/>\r\n                            <p>Waddle about campus</p>\r\n                            <div className=\"button\">\r\n                                <a href=\"/feed\">Let's get rollin'</a>\r\n                            </div>\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            <div id=\"footer\">&#60;<a href=\"/about\">about</a>; made with ❤ for <b>Bath Hack 2021</b>; source on <a\r\n                href={githubLink}>GitHub</a>;&#62;</div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}